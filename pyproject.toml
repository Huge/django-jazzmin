[tool.poetry]
name = "django-jazzmin"
version = "2.6.1"
description = "Drop-in theme for django admin, that utilises AdminLTE 3 & Bootstrap 4 to make yo' admin look jazzy"
license = "MIT"
authors = ["Shipit <packages@shipit.ltd>"]
maintainers = ["Shipit <packages@shipit.ltd>"]
readme = "README.md"
homepage = "https://github.com/farridav/django-jazzmin"
repository = "https://github.com/farridav/django-jazzmin"
documentation = "https://django-jazzmin.readthedocs.io"
keywords = ["django", "dashboard", "theme", "admin", "jazzmin"]
classifiers = [
    "Environment :: Web Environment",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Development Status :: 4 - Beta",
    "Framework :: Django",
    "Framework :: Django :: 3",
    "Framework :: Django :: 4",
    "Framework :: Django :: 5",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Internet :: WWW/HTTP :: WSGI",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
packages = [{ include = "jazzmin" }]
include = ["jazzmin"]
exclude = ["tests", "docs"]

[tool.poetry.dependencies]
python = ">=3.8"
django = ">=3"

[tool.poetry.group.dev.dependencies]
black = "^24.3.0"

[tool.black]
line-length = 120
target-version = ['py312']

[tool.poetry.dev-dependencies]
django-debug-toolbar = "^4.3.0" # unparallelled debugging in django
Werkzeug = "^3.0.1"             # support for werkzeug debugger in runserver_plus
django-extensions = "^3.2.3"    # Django Sugar for development
flake8-pyproject = "^1.2.3"     # Static code checking (with pyproject.toml support)
pytest = "^8.1.1"               # Test runner
pytest-django = "^4.8.0"        # Django integration for pytest
pytest-cov = "^4.1.0"           # Measure code coverage during tests
tox = "^4.14.2"                 # Test runner for python packages
Faker = "^24.3.0"               # less fake fake data
coveralls = "^3.3.1"            # Publish code coverage to coveralls
beautifulsoup4 = "^4.12.3"      # Structure HTML documents into navigable things for test assertions
mkdocs = "^1.5.3"               # Tool for serving rendered markdown docs
polib = "^1.2.0"                # Tool for dealing with translation files
factory-boy = "^3.3.0"          # Factory generation
mypy = "^1.9.0"                 # Type checking
click = "^8.1.7"                # Framework for building cli's
ipdb = "^0.13.13"               # ipython breakpoints
black = "^24.3.0"               # Code formatting and linting (with pyproject.toml support)

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/farridav/django-jazzmin/issues"
"All Releases" = "https://github.com/farridav/django-jazzmin/releases"
"Latest Release" = "https://github.com/farridav/django-jazzmin/releases/latest"
"Source" = "https://github.com/farridav/django-jazzmin"

[tool.pytest.ini_options]
addopts = "--pdbcls=IPython.terminal.debugger:TerminalPdb -p no:warnings --cov=jazzmin"
junit_family = "xunit2"
norecursedirs = ".git .tox _resource .mypy_cache build dist docs"
DJANGO_SETTINGS_MODULE = "tests.test_app.library.settings"
FAIL_INVALID_TEMPLATE_VARS = 1

[tool.flake8]
max-complexity = 10
ignore = ["C901", "W504", "W503", "E231", "E203"]
exclude = [".git", ".tox", "_resource", "migrations", "build", "dist", "docs"]
max-line-length = 120
show-source = true
statistics = false

[tool.coverage.run]
omit = ["*/__init__.py", ".tox", ".mypy_cache", ".reports", ".git"]

[tool.coverage.report]
omit = ["*/__init__.py", ".tox", ".mypy_cache", ".reports", ".git"]
show_missing = true

[tool.tox]
legacy_tox_ini = """
[tox]
envlist =
    django3-{python3.8,python3.9,python3.10},
    django4-{python3.8,python3.9,python3.10,python3.11,python3.12},
    django5-{python3.10,python3.11,python3.12},
    # run one of the tests again but with coverage
    coveralls-django5-python3.12,
skipsdist = True

[gh-actions]
python =
    3.8: python3.8
    3.9: python3.9
    3.10: python3.10
    3.11: python3.11
    3.12: python3.12

[testenv]
setenv =
    PYTHONPATH = {toxinidir}
commands =
    {envpython} -m flake8 jazzmin --max-line-length 120
    {envpython} -m pytest
deps =
    flake9
    pytest
    pytest-django
    pytest-cov
    coveralls
    mypy
    black
    beautifulsoup4
    factory-boy
    django3: Django<4
    django4: Django<5
    django5: Django<6

[testenv:coveralls-django5-python3.12]
passenv = COVERALLS_REPO_TOKEN
commands =
    mypy jazzmin --ignore-missing-imports
    black --check jazzmin tests --target-version py312 --line-length 120
    pytest
    coveralls
"""

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
